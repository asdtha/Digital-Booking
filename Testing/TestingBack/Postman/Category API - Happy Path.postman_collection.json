{
	"info": {
		"_postman_id": "407dd2fe-ecee-44ad-80b3-b0e9ed94c1cd",
		"name": "Category API - Happy Path",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "guardarCategoria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"guardar categoria tiene estatus 200-ok y es json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.be.json\r",
							"});\r",
							"\r",
							"pm.test(\"Recibo la data que puse\", function(){\r",
							"    const cat = pm.response.json();\r",
							"    pm.expect(cat.id).to.be.not.null;\r",
							"    pm.expect(cat.name).to.eql(\"casas\")\r",
							"    pm.expect(cat.description).to.equal(\"muchas tazitas ordenadas\")\r",
							"    pm.expect(cat.imageURL).to.equal(\"https://yocto.scrolller.com/these-mugs-5rxw2exquo-540x639.jpg\")\r",
							"}\r",
							")\r",
							"\r",
							"pm.collectionVariables.set(\"id_categoria\", pm.response.json().id);\r",
							"\r",
							"console.log(pm.collectionVariables.get(\"id_categoria\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"casas\",\"description\":\"muchas tazitas ordenadas\",\"imageURL\":\"https://yocto.scrolller.com/these-mugs-5rxw2exquo-540x639.jpg\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/API/category",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"category"
					]
				}
			},
			"response": []
		},
		{
			"name": "buscarPorId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"buscarPorId tiene estatus 200-ok y es json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.be.json\r",
							"});\r",
							"\r",
							"pm.test(\"Recibo la data guardada en otro test\", function(){\r",
							"    const cat = pm.response.json();\r",
							"    pm.expect(cat.id).to.equal(pm.collectionVariables.get(\"id_categoria\"))\r",
							"    pm.expect(cat.name).to.eql(\"casas\")\r",
							"    pm.expect(cat.description).to.equal(\"muchas tazitas ordenadas\")\r",
							"    pm.expect(cat.imageURL).to.equal(\"https://yocto.scrolller.com/these-mugs-5rxw2exquo-540x639.jpg\")\r",
							"    pm.expect(cat.id).to.equal(pm.collectionVariables.get(\"id_categoria\"))\r",
							"}\r",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/API/category/{{id_categoria}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"category",
						"{{id_categoria}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "actualizarCategoria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"actualizar tiene estatus 200-ok y es json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.be.json\r",
							"});\r",
							"\r",
							"pm.test(\"Recibo la data que puse\", function(){\r",
							"    const cat = pm.response.json();\r",
							"    pm.expect(cat.id).to.equal(pm.collectionVariables.get(\"id_categoria\"))\r",
							"    pm.expect(cat.name).to.eql(\"casas\")\r",
							"    pm.expect(cat.description).to.equal(\"nueva imagen rara\")\r",
							"    pm.expect(cat.imageURL).to.equal(\"https://yocto.scrolller.com/somebody-broke-the-4th-wall-stovy80u0n.jpg\")\r",
							"}\r",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":{{id_categoria}},\"name\":\"casas\",\"description\":\"nueva imagen rara\",\"imageURL\":\"https://yocto.scrolller.com/somebody-broke-the-4th-wall-stovy80u0n.jpg\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/API/category",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"category"
					]
				}
			},
			"response": []
		},
		{
			"name": "buscarTodos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tiene estatus 200-ok y es json\", function () {\r",
							"    \r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.be.json\r",
							"});\r",
							"\r",
							"pm.test(\"El nuevo esta en la lista\", function(){\r",
							"    const todos = pm.response.json()\r",
							"    let id_buscado = pm.collectionVariables.get(\"id_categoria\")\r",
							"    let estaEnLista = todos.some(cat=>cat.id == id_buscado)\r",
							"    pm.expect(estaEnLista).to.be.true\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"todos con id, no hay repetidos\", function(){\r",
							"    const todos = pm.response.json();\r",
							"    const hashId = new Set()\r",
							"    todos.forEach(cat=>{\r",
							"        if(hashId.has(cat.id)){\r",
							"            pm.expect.fail(\"Esta repetido el id\" + cat.id)\r",
							"        }else{\r",
							"            hashId.add(cat.id)\r",
							"        }\r",
							"    })\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/API/category",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"category"
					]
				}
			},
			"response": []
		},
		{
			"name": "eliminarPorId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tiene estatus 200-ok y tiene body\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.has.body\r",
							"});\r",
							"\r",
							"pm.test(\"el texto de resuesta es el correcto\",function(){\r",
							" pm.expect(pm.response.text()).to.include(\"Fue eliminada la categoria con id:\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/API/category/{{id_categoria}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"category",
						"{{id_categoria}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "buscar eliminado falla",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tiene estatus 400-BadRequest y tiene body\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"    pm.response.to.be.badRequest\r",
							"    pm.response.to.has.body\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"el texto de error es correcto\",function(){\r",
							"    pm.expect(pm.response.text()).to.include(\"No existe Categoria con id \")\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/API/category/{{id_categoria}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"category",
						"{{id_categoria}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "id_categoria",
			"value": ""
		}
	]
}