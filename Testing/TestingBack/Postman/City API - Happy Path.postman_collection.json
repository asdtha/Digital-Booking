{
	"info": {
		"_postman_id": "7d3028cb-4523-4268-bf2d-967213cc6ba5",
		"name": "City API - Happy Path",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "guardar City",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"guardar categoria tiene estatus 200-ok y es json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.be.json\r",
							"});\r",
							"\r",
							"pm.test(\"Recibo la data que puse\", function(){\r",
							"    const cat = pm.response.json();\r",
							"    pm.expect(cat.id).to.be.not.null;\r",
							"    pm.expect(cat.name).to.eql(\"cordoba Capital\")\r",
							"    pm.expect(cat.country_name).to.equal(\"Argentina\")\r",
							"}\r",
							")\r",
							"\r",
							"pm.collectionVariables.set(\"id_city\", pm.response.json().id);\r",
							"\r",
							"console.log(\"La ciudad guardada tiene Id: \" + pm.collectionVariables.get(\"id_city\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"cordoba Capital\", \"country_name\":\"Argentina\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/API/cities",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"cities"
					]
				}
			},
			"response": []
		},
		{
			"name": "buscar por id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"buscarPorId tiene estatus 200-ok y es json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.be.json\r",
							"});\r",
							"\r",
							"pm.test(\"Recibo la data guardada en otro test\", function(){\r",
							"    const city = pm.response.json();\r",
							"    pm.expect(city.id).to.equal(pm.collectionVariables.get(\"id_city\"))\r",
							"    pm.expect(city.name).to.eql(\"cordoba Capital\")\r",
							"    pm.expect(city.country_name).to.equal(\"Argentina\")\r",
							"}\r",
							")\r",
							"\r",
							"pm.test(\"City no trae productos\",function(){\r",
							"    const city = pm.response.json();\r",
							"    pm.expect(city.product).to.be.undefined\r",
							"    pm.expect(city.productDTO).to.be.undefined\r",
							"    pm.expect(city.products).to.be.undefined\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/API/cities/{{id_city}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"cities",
						"{{id_city}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar City",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"actualizar tiene estatus 200-ok y es json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.be.json\r",
							"});\r",
							"\r",
							"pm.test(\"Recibo la data que puse\", function(){\r",
							"    const city = pm.response.json();\r",
							"    pm.expect(city.id).to.equal(pm.collectionVariables.get(\"id_city\"))\r",
							"    pm.expect(city.name).to.eql(\"San Cristobal Del Valle de Concepcion de Catamarca\")\r",
							"    pm.expect(city.country_name).to.equal(\"coco\")\r",
							"}\r",
							")\r",
							"\r",
							"pm.test(\"City no trae productos\",function(){\r",
							"    const city = pm.response.json();\r",
							"    pm.expect(city.product).to.be.undefined\r",
							"    pm.expect(city.productDTO).to.be.undefined\r",
							"    pm.expect(city.products).to.be.undefined\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":{{id_city}},\"name\":\"San Cristobal Del Valle de Concepcion de Catamarca\", \"country_name\":\"coco\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/API/cities/update",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"cities",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar Todos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tiene estatus 200-ok y es json\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.be.json\r",
							"});\r",
							"\r",
							"pm.test(\"El nuevo esta en la lista\", function(){\r",
							"    const todos = pm.response.json()\r",
							"    let id_buscado = pm.collectionVariables.get(\"id_city\")\r",
							"    let estaEnLista = todos.some(elem=>elem.id == id_buscado)\r",
							"    pm.expect(estaEnLista).to.be.true\r",
							"})\r",
							"\r",
							"pm.test(\"todos con id, no hay repetidos\", function(){\r",
							"    const todos = pm.response.json();\r",
							"    const hashId = new Set()\r",
							"    todos.forEach(elem=>{\r",
							"        if(hashId.has(elem.id)){\r",
							"            pm.expect.fail(\"Esta repetido el id\" + elem.id)\r",
							"        }else{\r",
							"            hashId.add(elem.id)\r",
							"        }\r",
							"    })\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/API/cities/allCities",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"cities",
						"allCities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tiene estatus 200-ok y tiene body\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.be.ok\r",
							"    pm.response.to.has.body\r",
							"   \r",
							"});\r",
							"\r",
							"pm.test(\"el texto de resuesta es el correcto\",function(){\r",
							" pm.expect(pm.response.text()).to.include(\"Se elimin√≥ la ciudad con id: \")\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/API/cities/{{id_city}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"cities",
						"{{id_city}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "buscar eliminado falla",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tiene estatus 400-BadRequest y tiene body\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"    pm.response.to.be.badRequest\r",
							"    pm.response.to.has.body\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"el texto de error es correcto\",function(){\r",
							"    pm.expect(pm.response.text()).to.include(\"No existe una ciudad con id \")\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/API/cities/{{id_city}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"API",
						"cities",
						"{{id_city}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "id_city",
			"value": ""
		}
	]
}